!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("effector"),require("effector-react")):"function"==typeof define&&define.amd?define(["exports","effector","effector-react"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).EffectorForm={},e.effector,e.effectorReact)}(this,(function(e,r,t){"use strict";const o={store:function({init:e,domain:t,existing:o}){return o||(t?t.store(e):r.createStore(e))},event:function({domain:e,existing:t}){return t||(e?e.event():r.createEvent())}};function i(e,r,t){var i,n,s,u,l,a,d,c,f,m,v;const h="function"==typeof r.init?r.init():r.init,g=o.store({domain:t,existing:null===(i=r.units)||void 0===i?void 0:i.$value,init:h}),p=o.store({domain:t,existing:null===(n=r.units)||void 0===n?void 0:n.$errors,init:[]}),$=p.map(e=>e[0]?e[0]:null),E=g.map(e=>e!==h),x=o.store({domain:t,existing:null===(s=r.units)||void 0===s?void 0:s.$isTouched,init:!1}),V=o.event({domain:t,existing:null===(u=r.units)||void 0===u?void 0:u.onChange}),b=o.event({domain:t,existing:null===(l=r.units)||void 0===l?void 0:l.onBlur}),y=o.event({domain:t,existing:null===(a=r.units)||void 0===a?void 0:a.changed}),S=o.event({domain:t,existing:null===(d=r.units)||void 0===d?void 0:d.addError}),T=o.event({domain:t,existing:null===(c=r.units)||void 0===c?void 0:c.validate}),F=o.event({domain:t,existing:null===(f=r.units)||void 0===f?void 0:f.resetErrors}),O=o.event({domain:t,existing:null===(m=r.units)||void 0===m?void 0:m.resetValue}),B=o.event({domain:t,existing:null===(v=r.units)||void 0===v?void 0:v.reset});return{changed:y,name:e,$value:g,$errors:p,$firstError:$,$isValid:$.map(e=>null===e),$isDirty:E,$isTouched:x,$touched:x,onChange:V,onBlur:b,addError:S,validate:T,set:V,reset:B,resetErrors:F,resetValue:O,filter:r.filter}}function n({$form:e,validateFormEvent:t,submitEvent:o,resetFormEvent:i,resetValues:n,field:s,rules:u,formValidationEvents:l,fieldValidationEvents:a}){const{$value:d,$errors:c,onBlur:f,changed:m,addError:v,validate:h,resetErrors:g,resetValue:p,reset:$}=s,E=r.combine(u.map(({source:e})=>e||r.createStore(null))),x=function(e){return(r,t,o)=>{const i=[];for(let n=0;n<e.length;n++){const s=e[n],u=o?o[n]:null,l=s.validator(r,t,u);"boolean"!=typeof l||l||i.push({rule:s.name,errorText:s.errorText,value:r}),"object"!=typeof l||l.isValid||i.push({rule:s.name,errorText:l.errorText,value:r})}return i}}(u),V=[...l,...a],b=[];V.includes("submit")&&b.push(r.sample({source:r.combine({fieldValue:d,form:e,rulesSources:E}),clock:o})),V.includes("blur")&&b.push(r.sample({source:r.combine({fieldValue:d,form:e,rulesSources:E}),clock:f})),V.includes("change")&&b.push(r.sample({source:r.combine({fieldValue:d,form:e,rulesSources:E}),clock:r.merge([m,p,n])})),b.push(r.sample({source:r.combine({fieldValue:d,form:e,rulesSources:E}),clock:h})),b.push(r.sample({source:r.combine({fieldValue:d,form:e,rulesSources:E}),clock:t}));const y=r.sample({source:d,clock:v,fn:(e,{rule:r,errorText:t})=>({rule:r,value:e,errorText:t})});c.on(b,(e,{form:r,fieldValue:t,rulesSources:o})=>x(t,r,o)).on(y,(e,r)=>[r,...e]).reset(g,i,$),V.includes("change")||c.reset(m)}function s({$value:e,$touched:t,onChange:o,changed:i,name:n,reset:s,resetValue:u,filter:l},a,d,c,f){t.on(i,()=>!0).reset(s,d,c),r.guard({source:o,filter:l||(()=>!0),target:i}),e.on(i,(e,r)=>r).on(a,(e,r)=>r.hasOwnProperty(n)?r[n]:e).reset(s,u,f,d)}function u(e){const r=t.useStore(e.$value),o=t.useStore(e.$errors),i=t.useStore(e.$firstError),n=t.useStore(e.$isValid),s=t.useStore(e.$isDirty),u=t.useStore(e.$touched);return{name:e.name,value:r,errors:o,firstError:i,isValid:n,isDirty:s,touched:u,isTouched:u,onChange:e.onChange,onBlur:e.onBlur,addError:e.addError,validate:e.validate,reset:e.reset,set:e.onChange,resetErrors:e.resetErrors,hasError:()=>null!==i,errorText:e=>i?e&&e[i.rule]?e[i.rule]:i.errorText||"":""}}e.createForm=function(e){const{filter:t,domain:u,fields:l,validateOn:a,units:d}=e,c={},f=[],m=[];for(const e in l){if(!l.hasOwnProperty(e))continue;const r=i(e,l[e],u);c[e]=r,f.push(r.$isDirty),m.push(r.$touched)}const v=function(e){const t={};for(const r in e)e.hasOwnProperty(r)&&(t[r]=e[r].$value);return r.combine(t)}(c),h=function(e){const t=[];for(const r in e){if(!e.hasOwnProperty(r))continue;const{$firstError:o}=e[r];t.push(o)}return r.combine(t).map(e=>e.every(e=>null===e))}(c),g=t?r.combine(h,t,(e,r)=>e&&r):h,p=r.combine(f).map(e=>e.some(Boolean)),$=r.combine(m).map(e=>e.some(Boolean)),E=o.event({domain:u,existing:null==d?void 0:d.validate}),x=o.event({domain:u,existing:null==d?void 0:d.submit}),V=o.event({domain:u,existing:null==d?void 0:d.formValidated}),b=o.event({domain:u,existing:null==d?void 0:d.setForm}),y=o.event({domain:u,existing:null==d?void 0:d.reset}),S=o.event({domain:u,existing:null==d?void 0:d.resetValues}),T=o.event({domain:u,existing:null==d?void 0:d.resetTouched}),F=r.sample(v,x),O=r.sample(v,E);for(const e in c){if(!c.hasOwnProperty(e))continue;const r=l[e],t=c[e];s(t,b,y,T,S),r.rules&&n({$form:v,rules:r.rules,submitEvent:x,resetFormEvent:y,resetValues:S,validateFormEvent:E,field:t,formValidationEvents:a||["submit"],fieldValidationEvents:r.validateOn?r.validateOn:[]})}return r.guard({source:F,filter:g,target:V}),r.guard({source:O,filter:g,target:V}),{fields:c,$values:v,$eachValid:h,$isValid:h,$isDirty:p,$touched:$,submit:x,validate:E,resetTouched:T,reset:y,resetValues:S,setForm:b,set:b,formValidated:V}},e.useField=u,e.useForm=function(e){const r={};for(const t in e.fields){if(!e.fields.hasOwnProperty(t))continue;const o=e.fields[t];r[t]=u(o)}const o=t.useStore(e.$values),i=t.useStore(e.$eachValid),n=t.useStore(e.$isDirty),s=t.useStore(e.$touched);return{fields:r,values:o,hasError:e=>e?!!r[e]&&Boolean(r[e].firstError):!i,eachValid:i,isValid:i,isDirty:n,isTouched:s,touched:s,errors:e=>r[e]?r[e].errors:[],error:e=>r[e]?r[e].firstError:null,reset:e.reset,errorText:(e,t)=>{const o=r[e];return o&&o.firstError?t&&t[o.firstError.rule]?t[o.firstError.rule]:o.firstError.errorText||"":""},submit:e.submit,setForm:e.setForm,set:e.setForm,formValidated:e.formValidated}},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=effector-forms.umd.js.map
