var EffectorForm=function(e,r,t){"use strict";const o={store:function({init:e,domain:t,existing:o}){return o||(t?t.store(e):r.createStore(e))},event:function({domain:e,existing:t}){return t||(e?e.event():r.createEvent())}};function n(e,r,t){const n="function"==typeof r.init?r.init():r.init,i=o.store({domain:t,existing:r.units?.$value,init:n}),s=o.store({domain:t,existing:r.units?.$errors,init:[]}),a=s.map(e=>e[0]?e[0]:null),u=i.map(e=>e!==n),l=o.store({domain:t,existing:r.units?.$isTouched,init:!1}),c=o.event({domain:t,existing:r.units?.onChange}),d=o.event({domain:t,existing:r.units?.onBlur}),f=o.event({domain:t,existing:r.units?.changed}),m=o.event({domain:t,existing:r.units?.addError}),v=o.event({domain:t,existing:r.units?.validate}),h=o.event({domain:t,existing:r.units?.resetErrors}),$=o.event({domain:t,existing:r.units?.reset});return{changed:f,name:e,$value:i,$errors:s,$firstError:a,$isValid:a.map(e=>null===e),$isDirty:u,$isTouched:l,$touched:l,onChange:c,onBlur:d,addError:m,validate:v,set:c,reset:$,resetErrors:h,filter:r.filter}}function i({$form:e,submitEvent:t,resetFormEvent:o,field:n,rules:i,formValidationEvents:s,fieldValidationEvents:a}){const{$value:u,$errors:l,onBlur:c,changed:d,addError:f,validate:m,resetErrors:v,reset:h}=n,$=function(e){return(r,t)=>{const o=[];for(const n of e){const e=n.validator(r,t);"boolean"!=typeof e||e||o.push({rule:n.name,errorText:n.errorText,value:r}),"object"!=typeof e||e.isValid||o.push({rule:n.name,errorText:e.errorText,value:r})}return o}}(i),g=[...s,...a],E=[];g.includes("submit")&&E.push(r.sample({source:r.combine({fieldValue:u,form:e}),clock:t})),g.includes("blur")&&E.push(r.sample({source:r.combine({fieldValue:u,form:e}),clock:c})),g.includes("change")&&E.push(r.sample({source:r.combine({fieldValue:u,form:e}),clock:d})),E.push(r.sample({source:r.combine({fieldValue:u,form:e}),clock:m}));const p=r.sample({source:u,clock:f,fn:(e,{rule:r,errorText:t})=>({rule:r,value:e,errorText:t})});l.on(E,(e,{form:r,fieldValue:t})=>$(t,r)).on(p,(e,r)=>[r,...e]).reset(v,o,h),g.includes("change")||l.reset(d)}function s({$value:e,$touched:t,onChange:o,changed:n,name:i,reset:s,filter:a},u,l,c){t.on(n,()=>!0).reset(s,l,c),r.guard({source:o,filter:a||(()=>!0),target:n}),e.on(n,(e,r)=>r).on(u,(e,r)=>r.hasOwnProperty(i)?r[i]:e).reset(s,l)}function a(e){const r=t.useStore(e.$value),o=t.useStore(e.$errors),n=t.useStore(e.$firstError),i=t.useStore(e.$isValid),s=t.useStore(e.$isDirty),a=t.useStore(e.$touched);return{name:e.name,value:r,errors:o,firstError:n,isValid:i,isDirty:s,touched:a,isTouched:a,onChange:e.onChange,onBlur:e.onBlur,addError:e.addError,validate:e.validate,reset:e.reset,set:e.onChange,resetErrors:e.resetErrors,hasError:()=>null!==n,errorText:e=>n?e&&e[n.rule]?e[n.rule]:n.errorText||"":""}}return e.createForm=function(e){const{filter:t,domain:a,fields:u,validateOn:l,units:c}=e,d={},f=[],m=[];for(const e in u){if(!u.hasOwnProperty(e))continue;const r=n(e,u[e],a);d[e]=r,f.push(r.$isDirty),m.push(r.$touched)}const v=function(e){const t={};for(const r in e)e.hasOwnProperty(r)&&(t[r]=e[r].$value);return r.combine(t)}(d),h=function(e){const t=[];for(const r in e){if(!e.hasOwnProperty(r))continue;const{$firstError:o}=e[r];t.push(o)}return r.combine(t).map(e=>e.every(e=>null===e))}(d),$=t?r.combine(h,t,(e,r)=>e&&r):h,g=r.combine(f).map(e=>e.some(Boolean)),E=r.combine(m).map(e=>e.some(Boolean)),p=o.event({domain:a,existing:c?.submit}),x=o.event({domain:a,existing:c?.formValidated}),V=o.event({domain:a,existing:c?.setForm}),b=o.event({domain:a,existing:c?.reset}),y=o.event({domain:a,existing:c?.resetTouched}),T=r.sample(v,p);for(const e in d){if(!d.hasOwnProperty(e))continue;const r=u[e],t=d[e];s(t,V,b,y),r.rules&&i({$form:v,rules:r.rules,submitEvent:p,resetFormEvent:b,field:t,formValidationEvents:l||["submit"],fieldValidationEvents:r.validateOn?r.validateOn:[]})}return r.guard({source:T,filter:$,target:x}),{fields:d,$values:v,$eachValid:h,$isValid:h,$isDirty:g,$touched:E,submit:p,resetTouched:y,reset:b,setForm:V,set:V,formValidated:x}},e.useField=a,e.useForm=function(e){const r={};for(const t in e.fields){if(!e.fields.hasOwnProperty(t))continue;const o=e.fields[t];r[t]=a(o)}const o=t.useStore(e.$values),n=t.useStore(e.$eachValid),i=t.useStore(e.$isDirty),s=t.useStore(e.$touched);return{fields:r,values:o,hasError:e=>e?!!r[e]&&Boolean(r[e].firstError):!n,eachValid:n,isValid:n,isDirty:i,isTouched:s,touched:s,errors:e=>r[e]?r[e].errors:[],error:e=>r[e]?r[e].firstError:null,reset:e.reset,errorText:(e,t)=>{const o=r[e];return o&&o.firstError?t&&t[o.firstError.rule]?t[o.firstError.rule]:o.firstError.errorText||"":""},submit:e.submit,setForm:e.setForm,set:e.setForm,formValidated:e.formValidated}},e}({},effector,effectorReact);
//# sourceMappingURL=effector-forms.iife.js.map
